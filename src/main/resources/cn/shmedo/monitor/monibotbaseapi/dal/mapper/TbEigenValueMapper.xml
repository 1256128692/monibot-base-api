<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shmedo.monitor.monibotbaseapi.dal.mapper.TbEigenValueMapper">
    <resultMap id="BaseResultMap" type="cn.shmedo.monitor.monibotbaseapi.model.db.TbEigenValue">
        <!--@mbg.generated-->
        <!--@Table tb_eigen_value-->
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="ProjectID" jdbcType="INTEGER" property="projectID"/>
        <result column="Scope" jdbcType="INTEGER" property="scope"/>
        <result column="MonitorItemID" jdbcType="INTEGER" property="monitorItemID"/>
        <result column="MonitorTypeFieldID" jdbcType="INTEGER" property="monitorTypeFieldID"/>
        <result column="Name" jdbcType="VARCHAR" property="name"/>
        <result column="Value" jdbcType="DOUBLE" property="value"/>
        <result column="UnitID" jdbcType="INTEGER" property="unitID"/>
        <result column="AllMonitorPoint" jdbcType="TINYINT" property="allMonitorPoint"/>
        <result column="ExValue" jdbcType="VARCHAR" property="exValue"/>
        <result column="CreateUserID" jdbcType="INTEGER" property="createUserID"/>
        <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="UpdateUserID" jdbcType="INTEGER" property="updateUserID"/>
        <result column="UpdateTime" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        ID,
        ProjectID,
        `Scope`,
        MonitorItemID,
        MonitorTypeFieldID,
        `Name`,
        `Value`,
        UnitID,
        AllMonitorPoint,
        ExValue,
        CreateUserID,
        CreateTime,
        UpdateUserID,
        UpdateTime
    </sql>

    <select id="selectListByCondition"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.eigenValue.EigenValueInfoV1">
        select ev.ID,
               ev.ProjectID,
               ev.`Scope`,
               ev.MonitorItemID,
               ev.MonitorTypeFieldID,
               ev.`Name`,
               ev.`Value`,
               ev.UnitID,
               ev.ExValue,
               ev.CreateUserID,
               ev.CreateTime,
               ev.UpdateUserID,
               ev.UpdateTime,
               ev.AllMonitorPoint,
               du.ChnUnit,
               du.EngUnit,
               mtf.FieldName as monitorTypeFieldName,
               mi.Name       as MonitorItemName,
               mtf.FieldToken as monitorTypeFieldToken
        from tb_eigen_value ev
                 left join tb_data_unit du on du.ID = ev.UnitID
                 left join tb_monitor_type_field mtf on mtf.ID = ev.MonitorTypeFieldID
                 left join tb_monitor_item mi on mi.ID = ev.MonitorItemID
        where ev.ProjectID = #{projectID}
        <if test="fieldTokenList != null and fieldTokenList.size > 0">
            AND mtf.FieldToken IN
            <foreach collection="fieldTokenList" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="monitorItemID != null">
            and ev.monitorItemID = #{monitorItemID}
        </if>
        <if test="scope != null">
            and ev.scope = #{scope}
        </if>
        <if test="monitorPointIDList != null and monitorPointIDList.size != 0">
            and (ev.ID in (
            select EigenValueID
            from tb_eigen_value_relation where MonitorPointID in
            <foreach close=")" collection="monitorPointIDList" item="itemID" open="(" separator=",">
                #{itemID}
            </foreach>
            ) or ev.AllMonitorPoint = 1)
        </if>
    </select>

    <select id="selectBaseInfoByIDList" resultType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicEigenValueData">
      SELECT
          mp.`MonitorType` monitorType,
          ev.`ID` eigenValueID,
          ev.`Name` eigenValueName,
          ev.`Value` eigenValue,
          du.`ChnUnit` chnUnit,
          du.`EngUnit` engUnit
      FROM
          tb_eigen_value ev
          LEFT JOIN tb_data_unit du ON du.`ID` = ev.`UnitID`
          LEFT JOIN tb_eigen_value_relation evr ON evr.`EigenValueID` = ev.`ID`
          LEFT JOIN tb_monitor_point mp ON mp.`ID` = evr.`MonitorPointID`
      WHERE ev.ID IN
      <foreach collection="eigenValueIDList" item="item" open="(" close=")" index="index" separator=",">
          #{item}
      </foreach>
      <if test="monitorPointIDList != null and monitorPointIDList.size > 0">
          AND mp.`ID` IN
          <foreach collection="monitorPointIDList" item="item" index="index" open="(" close=")" separator=",">
              #{item}
          </foreach>
      </if>
    </select>
    <select id="selectFieldInfoByPointIDList"
          resultType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicEigenValueInfo">
    SELECT
        ev.ProjectID projectID,
        ev.MonitorItemID monitorItemID,
        evr.MonitorPointID monitorPointID,
        mtf.MonitorType monitorType,
        mtf.FieldToken fieldToken,
        ev.ID eigenValueID,
        ev.`Name` eigenValueName,
        ev.`Value` eigenValue,
        du.ChnUnit chnUnit,
        du.EngUnit engUnit
    FROM tb_eigen_value_relation evr
        LEFT JOIN tb_eigen_value ev ON ev.ID = evr.EigenValueID
        LEFT JOIN tb_data_unit du ON du.ID = ev.UnitID
        LEFT JOIN tb_monitor_type_field mtf ON mtf.ID = ev.MonitorTypeFieldID
    WHERE (evr.MonitorPointID IN
    <foreach collection="monitorPointIDList" item="item" index="index" open="(" close=")" separator=",">
        #{item}
    </foreach>) OR ev.AllMonitorPoint = 1
  </select>

    <delete id="deleteByEigenValueIDList">
        delete
        from tb_eigen_value
        where ID in
        <foreach collection="eigenValueIDList" item="eigenValueID" separator="," index="index" open="(" close=")">
            #{eigenValueID}
        </foreach>
    </delete>

    <select id="selectByIDs"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorpointdata.EigenBaseInfo">
        select ev.ID         as id,
               ev.projectID,
               ev.scope,
               ev.monitorItemID,
               ev.monitorTypeFieldID,
               mtf.FieldName as monitorTypeFieldName,
               ev.name,
               ev.value,
               mtf.fieldUnitID,
               du.engUnit,
               du.chnUnit
        from tb_eigen_value ev
                 left join tb_monitor_type_field mtf on mtf.ID = ev.monitorTypeFieldID
                 left join tb_data_unit du on du.ID = mtf.fieldUnitID
        where ev.ID in
        <foreach collection="eigenValueIDList" item="eigenValueID" separator="," index="index" open="(" close=")">
            #{eigenValueID}
        </foreach>
    </select>

    <insert id="insertBatchSelective" keyProperty="id" useGeneratedKeys="true">
        insert into tb_eigen_value
        (ProjectID, `Scope`, MonitorItemID, MonitorTypeFieldID, `Name`, `Value`,
         UnitID, AllMonitorPoint, ExValue, CreateUserID, CreateTime, UpdateUserID, UpdateTime)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.projectID,jdbcType=INTEGER},
             #{item.scope,jdbcType=INTEGER},
             #{item.monitorItemID,jdbcType=INTEGER},
             #{item.monitorTypeFieldID,jdbcType=INTEGER},
             #{item.name,jdbcType=VARCHAR},
             #{item.value,jdbcType=DOUBLE},
             #{item.unitID,jdbcType=INTEGER},
             #{item.allMonitorPoint,jdbcType=INTEGER},
            <choose>
                <when test="item.exValue != null and item.exValue != ''">
                    #{item.exValue,jdbcType=VARCHAR},
                </when>
                <otherwise>
                    NULL,
                </otherwise>
            </choose>
            #{item.createUserID,jdbcType=INTEGER},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateUserID,jdbcType=INTEGER},
            #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <select id="selectExist" resultType="boolean">
        SELECT EXISTS
        <trim prefix="(" suffix=")">
            SELECT 1
            FROM tb_eigen_value tev
                     LEFT JOIN tb_eigen_value_relation tevr ON tev.ID = tevr.EigenValueID
            <if test="list != null and list.size != 0">
                WHERE tev.ProjectID = #{projectID,jdbcType=INTEGER}
                <if test="excludeEigenValueID != null">
                    AND tev.ID != #{excludeEigenValueID,jdbcType=INTEGER}
                </if>
                <foreach collection="list" item="item" separator="OR" open="AND (" close=")">
                    <trim prefix="(" suffix=")" prefixOverrides="AND">
                        <if test="item.scope != null">
                            AND tev.Scope = #{item.scope.code,jdbcType=INTEGER}
                        </if>
                        <if test="item.monitorTypeFieldID != null">
                            AND tev.MonitorTypeFieldID = #{item.monitorTypeFieldID,jdbcType=INTEGER}
                        </if>
                        <if test="item.monitorItemID != null">
                            AND tev.MonitorItemID = #{item.monitorItemID,jdbcType=INTEGER}
                        </if>
                        <if test="item.name != null and item.name != ''">
                            AND tev.`Name` = #{item.name,jdbcType=VARCHAR}
                        </if>
                        <if test="item.monitorPointIDList != null and item.monitorPointIDList.size != 0">
                            <foreach collection="item.monitorPointIDList" separator=","
                                     open="AND tevr.MonitorPointID in (" close=")" item="pid">
                                #{pid}
                            </foreach>
                        </if>
                    </trim>
                </foreach>
            </if>
        </trim>
    </select>
</mapper>