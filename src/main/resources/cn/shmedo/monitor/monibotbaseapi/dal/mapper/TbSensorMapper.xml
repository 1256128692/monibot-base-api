<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shmedo.monitor.monibotbaseapi.dal.mapper.TbSensorMapper">
    <resultMap id="BaseResultMap" type="cn.shmedo.monitor.monibotbaseapi.model.db.TbSensor">
        <!--@mbg.generated-->
        <!--@Table tb_sensor-->
        <id column="ID" jdbcType="INTEGER" property="ID"/>
        <result column="ProjectID" jdbcType="INTEGER" property="projectID"/>
        <result column="TemplateID" jdbcType="INTEGER" property="templateID"/>
        <result column="DataSourceID" jdbcType="VARCHAR" property="dataSourceID"/>
        <result column="DataSourceComposeType" jdbcType="INTEGER" property="dataSourceComposeType"/>
        <result column="MonitorType" jdbcType="INTEGER" property="monitorType"/>
        <result column="Name" jdbcType="VARCHAR" property="name"/>
        <result column="Alias" jdbcType="VARCHAR" property="alias"/>
        <result column="Kind" jdbcType="TINYINT" property="kind"/>
        <result column="DisplayOrder" jdbcType="INTEGER" property="displayOrder"/>
        <result column="MonitorPointID" jdbcType="INTEGER" property="monitorPointID"/>
        <result column="ConfigFieldValue" jdbcType="VARCHAR" property="configFieldValue"/>
        <result column="ExValues" jdbcType="VARCHAR" property="exValues"/>
        <result column="Status" jdbcType="TINYINT" property="status"/>
        <result column="WarnNoData" jdbcType="BIT" property="warnNoData"/>
        <result column="MonitorBeginTime" jdbcType="TIMESTAMP" property="monitorBeginTime"/>
        <result column="ImagePath" jdbcType="VARCHAR" property="imagePath"/>
        <result column="Enable" jdbcType="BIT" property="enable"/>
        <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="CreateUserID" jdbcType="INTEGER" property="createUserID"/>
        <result column="UpdateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="UpdateUserID" jdbcType="INTEGER" property="updateUserID"/>
        <result column="VideoDeviceID" jdbcType="INTEGER" property="videoDeviceID"/>
        <result column="ChannelCode" jdbcType="INTEGER" property="channelCode"/>
        <result column="VideoDeviceSourceID" jdbcType="INTEGER" property="videoDeviceSourceID"/>
    </resultMap>
    <resultMap id="sensorIDWithFormulaBaseMap" type="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.SensorIDWithFormulaBaseInfo">
        <id column="sensorID" jdbcType="INTEGER" property="sensorID"/>
        <result column="templateID" jdbcType="INTEGER" property="templateID"/>
        <result column="monitorType" jdbcType="INTEGER" property="monitorType"/>
        <result column="calType" jdbcType="INTEGER" property="calType"/>
        <collection property="formulaBaseInfoList" ofType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.FormulaBaseInfo">
            <id column="fieldToken" jdbcType="VARCHAR" property="fieldToken"/>
            <result column="formula" jdbcType="VARCHAR" property="formula"/>
            <result column="fieldCalOrder" jdbcType="INTEGER" property="fieldCalOrder"/>
        </collection>
        <collection property="sensorParameterList" ofType="cn.shmedo.monitor.monibotbaseapi.model.db.TbParameter">
            <id column="sParamID" jdbcType="INTEGER" property="ID"/>
            <result column="sParamSubjectID" jdbcType="INTEGER" property="subjectID"/>
            <result column="sParamSubjectType" jdbcType="INTEGER" property="subjectType"/>
            <result column="sParamPaUnitID" jdbcType="VARCHAR" property="paUnitID"/>
            <result column="sParamDataType" jdbcType="VARCHAR" property="dataType"/>
            <result column="sParamToken" jdbcType="VARCHAR" property="token"/>
            <result column="sParamName" jdbcType="VARCHAR" property="name"/>
            <result column="sParamPaValue" jdbcType="VARCHAR" property="paValue"/>
            <result column="sParamPaDesc" jdbcType="VARCHAR" property="paDesc"/>
        </collection>
        <collection property="templateParameterList" ofType="cn.shmedo.monitor.monibotbaseapi.model.db.TbParameter">
            <id column="tParamID" jdbcType="INTEGER" property="ID"/>
            <result column="tParamSubjectID" jdbcType="INTEGER" property="subjectID"/>
            <result column="tParamSubjectType" jdbcType="INTEGER" property="subjectType"/>
            <result column="tParamPaUnitID" jdbcType="VARCHAR" property="paUnitID"/>
            <result column="tParamDataType" jdbcType="VARCHAR" property="dataType"/>
            <result column="tParamToken" jdbcType="VARCHAR" property="token"/>
            <result column="tParamName" jdbcType="VARCHAR" property="name"/>
            <result column="tParamPaValue" jdbcType="VARCHAR" property="paValue"/>
            <result column="tParamPaDesc" jdbcType="VARCHAR" property="paDesc"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        ID,
        ProjectID,
        TemplateID,
        DataSourceID,
        DataSourceComposeType,
        MonitorType,
        `Name`,
        `Alias`,
        Kind,
        DisplayOrder,
        MonitorPointID,
        ConfigFieldValue,
        ExValues,
        `Status`,
        WarnNoData,
        MonitorBeginTime,
        ImagePath,
        `Enable`,
        CreateTime,
        CreateUserID,
        UpdateTime,
        UpdateUserID,
        VideoDeviceID,
        ChannelCode,
        VideoDeviceSourceID
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from tb_sensor
        where ID = #{ID,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from tb_sensor
        where ID = #{ID,jdbcType=INTEGER}
    </delete>

    <insert id="insertSelective" keyColumn="ID" keyProperty="ID"
            parameterType="cn.shmedo.monitor.monibotbaseapi.model.db.TbSensor" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into tb_sensor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectID != null">
                ProjectID,
            </if>
            <if test="templateID != null">
                TemplateID,
            </if>
            <if test="dataSourceID != null">
                DataSourceID,
            </if>
            <if test="dataSourceComposeType != null">
                DataSourceComposeType,
            </if>
            <if test="monitorType != null">
                MonitorType,
            </if>
            <if test="name != null">
                `Name`,
            </if>
            <if test="alias != null">
                `Alias`,
            </if>
            <if test="kind != null">
                Kind,
            </if>
            <if test="displayOrder != null">
                DisplayOrder,
            </if>
            <if test="monitorPointID != null">
                MonitorPointID,
            </if>
            <if test="configFieldValue != null">
                ConfigFieldValue,
            </if>
            <if test="exValues != null">
                ExValues,
            </if>
            <if test="status != null">
                `Status`,
            </if>
            <if test="warnNoData != null">
                WarnNoData,
            </if>
            <if test="monitorBeginTime != null">
                MonitorBeginTime,
            </if>
            <if test="imagePath != null">
                ImagePath,
            </if>
            <if test="createTime != null">
                CreateTime,
            </if>
            <if test="createUserID != null">
                CreateUserID,
            </if>
            <if test="updateTime != null">
                UpdateTime,
            </if>
            <if test="updateUserID != null">
                UpdateUserID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectID != null">
                #{projectID,jdbcType=INTEGER},
            </if>
            <if test="templateID != null">
                #{templateID,jdbcType=INTEGER},
            </if>
            <if test="dataSourceID != null">
                #{dataSourceID,jdbcType=VARCHAR},
            </if>
            <if test="dataSourceComposeType != null">
                #{dataSourceComposeType,jdbcType=INTEGER},
            </if>
            <if test="monitorType != null">
                #{monitorType,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                #{alias,jdbcType=VARCHAR},
            </if>
            <if test="kind != null">
                #{kind,jdbcType=TINYINT},
            </if>
            <if test="displayOrder != null">
                #{displayOrder,jdbcType=INTEGER},
            </if>
            <if test="monitorPointID != null">
                #{monitorPointID,jdbcType=INTEGER},
            </if>
            <if test="configFieldValue != null">
                #{configFieldValue,jdbcType=VARCHAR},
            </if>
            <if test="exValues != null">
                #{exValues,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="warnNoData != null">
                #{warnNoData,jdbcType=BIT},
            </if>
            <if test="monitorBeginTime != null">
                #{monitorBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="imagePath != null">
                #{imagePath,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserID != null">
                #{createUserID,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserID != null">
                #{updateUserID,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.shmedo.monitor.monibotbaseapi.model.db.TbSensor">
        <!--@mbg.generated-->
        update tb_sensor
        <set>
            <if test="projectID != null">
                ProjectID = #{projectID,jdbcType=INTEGER},
            </if>
            <if test="templateID != null">
                TemplateID = #{templateID,jdbcType=INTEGER},
            </if>
            <if test="dataSourceID != null">
                DataSourceID = #{dataSourceID,jdbcType=VARCHAR},
            </if>
            <if test="dataSourceComposeType != null">
                DataSourceComposeType = #{dataSourceComposeType,jdbcType=INTEGER},
            </if>
            <if test="monitorType != null">
                MonitorType = #{monitorType,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                `Name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                `Alias` = #{alias,jdbcType=VARCHAR},
            </if>
            <if test="kind != null">
                Kind = #{kind,jdbcType=TINYINT},
            </if>
            <if test="displayOrder != null">
                DisplayOrder = #{displayOrder,jdbcType=INTEGER},
            </if>
            <if test="monitorPointID != null">
                MonitorPointID = #{monitorPointID,jdbcType=INTEGER},
            </if>
            <if test="configFieldValue != null">
                ConfigFieldValue = #{configFieldValue,jdbcType=VARCHAR},
            </if>
            <if test="exValues != null">
                ExValues = #{exValues,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `Status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="warnNoData != null">
                WarnNoData = #{warnNoData,jdbcType=BIT},
            </if>
            <if test="monitorBeginTime != null">
                MonitorBeginTime = #{monitorBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="imagePath != null">
                ImagePath = #{imagePath,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                `Enable` = #{enable,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                CreateTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserID != null">
                CreateUserID = #{createUserID,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserID != null">
                UpdateUserID = #{updateUserID,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{ID,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.shmedo.monitor.monibotbaseapi.model.db.TbSensor">
        <!--@mbg.generated-->
        update tb_sensor
        set ProjectID             = #{projectID,jdbcType=INTEGER},
            TemplateID            = #{templateID,jdbcType=INTEGER},
            DataSourceID          = #{dataSourceID,jdbcType=VARCHAR},
            DataSourceComposeType = #{dataSourceComposeType,jdbcType=INTEGER},
            MonitorType           = #{monitorType,jdbcType=INTEGER},
            `Name`                = #{name,jdbcType=VARCHAR},
            `Alias`               = #{alias,jdbcType=VARCHAR},
            Kind                  = #{kind,jdbcType=TINYINT},
            DisplayOrder          = #{displayOrder,jdbcType=INTEGER},
            MonitorPointID        = #{monitorPointID,jdbcType=INTEGER},
            ConfigFieldValue      = #{configFieldValue,jdbcType=VARCHAR},
            ExValues              = #{exValues,jdbcType=VARCHAR},
            `Status`              = #{status,jdbcType=TINYINT},
            WarnNoData            = #{warnNoData,jdbcType=BIT},
            MonitorBeginTime      = #{monitorBeginTime,jdbcType=TIMESTAMP},
            ImagePath             = #{imagePath,jdbcType=VARCHAR},
            `Enable`              = #{enable,jdbcType=BIT},
            CreateTime            = #{createTime,jdbcType=TIMESTAMP},
            CreateUserID          = #{createUserID,jdbcType=INTEGER},
            UpdateTime            = #{updateTime,jdbcType=TIMESTAMP},
            UpdateUserID          = #{updateUserID,jdbcType=INTEGER}
        where ID = #{ID,jdbcType=INTEGER}
    </update>

    <select id="selectListByCompanyIDAndQueryTypeAndProjectIDList" resultMap="BaseResultMap">
        select ID, Status, MonitorType, MonitorPointID
        from tb_sensor
        where MonitorPointID in (select ID
                                 from tb_monitor_point
        where MonitorItemID in
              (select ID from tb_monitor_item where CompanyID = #{companyID} and MonitorClass = #{queryType})
          and ProjectID in
        <foreach collection="projectIDList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        )
    </select>

    <select id="selectSensorPage"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.sensor.SensorListResponse">
        SELECT ts.ID,
               ts.MonitorType    AS `monitorType`,
               ts.`Name`         AS `name`,
               ts.Alias          AS `alias`,
               ts.DisplayOrder   AS `displayOrder`,
               ts.monitorPointID AS `monitorPointID`,
               ts.exValues       AS `exValues`,
               ts.Enable         AS `enable`,
               tmp.`Name`        AS `monitorPointName`,
               tmt.TypeName      AS `monitorTypeName`,
               IF(tmt.MonitorType=40,'视频数据',(CASE tsds.DataSourceComposeType WHEN 1 THEN '物联网数据' WHEN 100 THEN 'API外部数据' WHEN 500 THEN '人工数据' END)) dataSourceKey
        FROM `tb_sensor` ts
                 LEFT JOIN `tb_monitor_point` tmp ON ts.MonitorPointID = tmp.ID
                 LEFT JOIN `tb_monitor_type` tmt ON ts.MonitorType = tmt.MonitorType
                 LEFT JOIN `tb_sensor_data_source` tsds ON tsds.DataSourceID = ts.DataSourceID
        <where>
            <trim suffixOverrides="AND">
                <if test="pa.keyword != null and pa.keyword != ''">
                    (ts.`Alias` LIKE CONCAT('%', #{pa.keyword}, '%') OR tmp.`Name` LIKE CONCAT('%', #{pa.keyword}, '%'))
                      AND
                </if>
                <if test="pa.sensorName != null and pa.sensorName != ''">
                    ts.`Alias` LIKE CONCAT('%', #{pa.sensorName}, '%')
                      AND
                </if>
                <if test="pa.sensorID != null">
                    ts.ID = #{pa.sensorID}
                      AND
                </if>
                <if test="pa.monitorType != null and pa.monitorType != ''">
                    tmt.TypeName LIKE CONCAT('%', #{pa.monitorType}, '%')
                      AND
                </if>
                <if test="pa.monitorTypeID != null">
                    tmt.ID = #{pa.monitorTypeID}
                      AND
                </if>
                <if test="pa.monitorPoint != null and pa.monitorPoint != ''">
                    tmp.`Name` LIKE CONCAT('%', #{pa.monitorPoint}, '%')
                      AND
                </if>
                <if test="pa.monitorPointID != null">
                    tmp.ID = #{pa.monitorPointID}
                      AND
                </if>
                <if test="pa.projectID != null">
                    ts.ProjectID = #{pa.projectID} AND
                </if>
                <if test="pa.dataSourceKey != null">
                    <choose>
                        <when test="pa.dataSourceKey == 1">
                            tsds.DataSourceComposeType=1 AND tmt.MonitorType != 40 AND
                        </when>
                        <when test="pa.dataSourceKey == 2">
                            tsds.DataSourceComposeType=100 AND
                        </when>
                        <when test="pa.dataSourceKey == 3">
                            tsds.DataSourceComposeType=500 AND
                        </when>
                        <when test="pa.dataSourceKey == 4">
                            tmt.MonitorType=40 AND
                        </when>
                    </choose>
                </if>
            </trim>
        </where>
        ORDER BY ts.CreateTime DESC
    </select>

    <select id="getNameSerialNumber" resultType="java.lang.Integer">
        SELECT IFNULL(MAX(CONVERT(SUBSTRING_INDEX(`Name`, '_', - 1), UNSIGNED)), 0) + 1
        FROM `tb_sensor`
        WHERE MonitorType = #{monitorType}
          AND ProjectID = #{projectID}
    </select>

    <select id="selectSensorList"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.sensor.SensorListResponse">
        SELECT ts.ID,
               ts.MonitorType    AS `monitorType`,
               ts.`Name`         AS `name`,
               ts.Alias          AS `alias`,
               ts.DisplayOrder   AS `displayOrder`,
               ts.monitorPointID AS `monitorPointID`,
               ts.exValues       AS `exValues`,
               ts.Enable         AS `enable`,
               tmp.`Name`        AS `monitorPointName`,
               tmt.TypeName      AS `monitorTypeName`,
               IF(tmt.MonitorType=40,'视频数据',(CASE tsds.DataSourceComposeType WHEN 1 THEN '物联网数据' WHEN 100 THEN 'API外部数据' WHEN 500 THEN '人工数据' END)) dataSourceKey
        FROM `tb_sensor` ts
                 LEFT JOIN `tb_monitor_point` tmp ON ts.MonitorPointID = tmp.ID
                 LEFT JOIN `tb_monitor_type` tmt ON ts.MonitorType = tmt.MonitorType
                 LEFT JOIN `tb_sensor_data_source` tsds ON tsds.DataSourceID = ts.DataSourceID
        <where>
            <trim suffixOverrides="AND">
                <if test="pa.sensorName != null and pa.sensorName != ''">
                    ts.`Alias` LIKE CONCAT('%', #{pa.sensorName}, '%')
                      AND
                </if>
                <if test="pa.sensorID != null">
                    ts.ID = #{pa.sensorID}
                      AND
                </if>
                <if test="pa.monitorType != null">
                    tmt.TypeName LIKE CONCAT('%', #{pa.monitorType}, '%')
                      AND
                </if>
                <if test="pa.monitorTypeID != null">
                    tmt.ID = #{pa.monitorTypeID}
                      AND
                </if>
                <if test="pa.monitorPoint != null and pa.monitorPoint != ''">
                    tmp.`Name` LIKE CONCAT('%', #{pa.monitorPoint}, '%')
                      AND
                </if>
                <if test="pa.monitorPointID != null">
                    tmp.ID = #{pa.monitorPointID}
                      AND
                </if>
                <if test="pa.projectID != null">
                    ts.ProjectID = #{pa.projectID} AND
                </if>
                <if test="pa.dataSourceKey != null">
                    <choose>
                        <when test="pa.dataSourceKey == 1">
                            tsds.DataSourceComposeType=1 AND tmt.MonitorType != 40 AND
                        </when>
                        <when test="pa.dataSourceKey == 2">
                            tsds.DataSourceComposeType=100 AND
                        </when>
                        <when test="pa.dataSourceKey == 3">
                            tsds.DataSourceComposeType=500 AND
                        </when>
                        <when test="pa.dataSourceKey == 4">
                            tmt.MonitorType=40 AND
                        </when>
                    </choose>
                </if>
            </trim>
        </where>
        ORDER BY ts.UpdateTime DESC
    </select>

    <update id="updatePoint">
        update tb_sensor
        set MonitorPointID = #{pointID},
            UpdateTime     = #{date},
            UpdateUserID   = #{userID}
        where ID in
        <foreach collection="sensorIDList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="updatePointByPoint">
        update tb_sensor
        set MonitorPointID = #{newPoint},
            UpdateTime     = #{date},
            UpdateUserID   = #{userID}
        where MonitorPointID = #{oldPoint}
    </update>

    <select id="querySensorWithMoreBy" resultType="cn.shmedo.monitor.monibotbaseapi.model.tempitem.SensorWithMore">
        select s.id            as           sensorID,
               s.Name          as           sensorName,
               LEFT(ds.DataSourceToken, 32) uniqueToken,
               p.id            as           monitorPointID,
               p.Name          as           monitorPointName,
               p.GpsLocation   as           pointGpsLocation,
               p.ImageLocation as           pointImageLocation,
               it.id           as           monitorItemID,
               it.Name         as           monitorItemName,
               it.Alias        as           monitorItemAlias,
               s.ProjectID     as           projectID
        from tb_sensor as s
                 left join tb_sensor_data_source as ds on ds.DataSourceID = s.DataSourceID
                 left join tb_monitor_point as p on p.id = s.MonitorPointID
                 left join tb_monitor_item as it on it.id = p.MonitorItemID
        <where>
            <foreach collection="uniqueTokens" open="(" close=")" item="item" separator="OR">
                ds.DataSourceToken LIKE CONCAT(#{item}, '%')
            </foreach>
            and s.MonitorPointID is not null
            and s.ProjectID in
            <foreach collection="projectIDList" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
            <if test="monitorItemID != null">
                and it.id = #{monitorItemID}
            </if>
        </where>
    </select>


    <select id="selectListBymonitorPointIDList" parameterType="java.lang.Integer"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.sensor.SensorBaseInfoResponse">
        select ID     as sensorID,
               `Name` as sensorName,
               Alias  as sensorAlias,
               monitorPointID,
               projectID,
               configFieldValue,
               monitorType
        from tb_sensor
        where MonitorPointID in
        <foreach collection="monitorPointIDList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <select id="queryAllTypeAndID" resultType="cn.shmedo.iot.entity.base.Tuple">
        select MonitorType as item1, id as item2
        from tb_sensor
    </select>

    <select id="selectListByMonitorPointIDsAndProjectIDs"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.sensor.SensorHistoryAvgDataResponse">
        select s.ID         as sensorID,
               s.`Name`     as sensorName,
               s.Alias      as sensorAlias,
               s.monitorPointID,
               s.projectID,
               s.monitorType,
               m.Name       as monitorPointName,
               s.configFieldValue,
               s.exvalues,
               pi.projectName,
               pi.ShortName as projectShortName
        from tb_sensor s
                 left join tb_monitor_point m on s.monitorPointID = m.ID
                 left join tb_project_info pi on s.projectID = pi.ID
        where s.MonitorPointID in
        <foreach collection="monitorPointIDList" item="monitorPointID" separator="," open="(" close=")">
            #{monitorPointID}
        </foreach>
        and s.ProjectID in
        <foreach collection="projectIDList" item="projectID" separator="," open="(" close=")">
            #{projectID}
        </foreach>
    </select>


    <select id="selectListBySensorIDsAndProjectIDs"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.sensor.SensorHistoryAvgDataResponse">
        select s.ID         as sensorID,
               s.`Name`     as sensorName,
               s.Alias      as sensorAlias,
               s.monitorPointID,
               s.projectID,
               s.monitorType,
               m.Name       as monitorPointName,
               s.configFieldValue,
               s.exvalues,
               pi.projectName,
               pi.ShortName as projectShortName
        from tb_sensor s
                 left join tb_monitor_point m on s.monitorPointID = m.ID
                 left join tb_project_info pi on s.projectID = pi.ID
        where s.ID in
        <foreach collection="sensorIDList" item="sensorID" separator="," open="(" close=")">
            #{sensorID}
        </foreach>
        and s.ProjectID in
        <foreach collection="projectIDList" item="projectID" separator="," open="(" close=")">
            #{projectID}
        </foreach>
    </select>

    <select id="queryListByCondition"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.video.VideoCaptureBaseInfo">
        select s.ID          as sensorID,
               s.`Name`      as sensorName,
               s.projectID,
               s.channelCode as channelNo,
               s.videoDeviceID,
               s.Enable      as sensorEnable,
               s.ExValues,
               c.CaptureInterval
        from tb_sensor s
                 left join tb_video_capture c on s.ID = c.SensorID
        where s.VideoDeviceID in
        <foreach collection="videoIDList" item="videoID" separator="," open="(" close=")">
            #{videoID}
        </foreach>
    </select>

    <select id="queryMaxDisplayOrderByMonitorType" resultType="java.lang.Integer">
        select Max(DisplayOrder)
        from tb_sensor
        where MonitorType = #{key}
    </select>

    <insert id="insertSensorList" parameterType="cn.shmedo.monitor.monibotbaseapi.model.param.video.SensorBaseInfoV1">
        INSERT INTO tb_sensor (name, alias, enable, channelCode, projectID, videoDeviceID, templateID,
                               dataSourceComposeType, monitorType, kind, displayOrder, exValues, createTime,
                               createUserID, updateTime, updateUserID, VideoDeviceSourceID)
        VALUES
        <foreach collection="insertSensorList" item="item" separator=",">
            (#{item.sensorName}, #{item.sensorName}, #{item.sensorEnable}, #{item.channelCode}, #{item.projectID},
             #{item.videoDeviceID}, #{item.templateID}, #{item.dataSourceComposeType}, #{item.monitorType},
             #{item.kind}, #{item.displayOrder}, #{item.exValues}, #{item.createTime}, #{item.createUserID},
             #{item.updateTime}, #{item.updateUserID}, #{item.videoDeviceSourceID})
        </foreach>
    </insert>

    <update id="updateSensorList" parameterType="cn.shmedo.monitor.monibotbaseapi.model.param.video.SensorBaseInfoV1">
        <foreach collection="updateSensorList" item="item" separator=";">
            UPDATE tb_sensor
            SET name         = #{item.sensorName},
                alias        = #{item.sensorName},
                enable       = #{item.sensorEnable},
                projectID    = #{item.projectID},
                channelCode  = #{item.channelCode},
                exValues     = #{item.exValues},
                updateTime   = #{item.updateTime},
                updateUserID = #{item.updateUserID}
            WHERE ID = #{item.sensorID}
        </foreach>
    </update>

    <select id="selectListByNameAndProjectID"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.param.video.SensorBaseInfoV1">
        SELECT s.ID as sensorID, vd.deviceSerial, s.name as sensorName
        FROM tb_sensor as s
                 LEFT JOIN tb_video_device vd on vd.ID = s.VideoDeviceID
        WHERE s.name IN
        <foreach item="sensorName" collection="sensorNameList" open="(" close=")" separator=",">
            #{sensorName}
        </foreach>
        AND s.projectID = #{projectID}
    </select>

    <select id="queryListByDeviceSerialList"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.video.VideoCaptureBaseInfo">
        select s.ID     as sensorID,
               s.`Name` as sensorName,
               s.projectID,
               tvds.ID  as VideoDeviceSourceID,
               tvds.channelNo,
               tvds.Enable,
               tvds.DeviceSerial,
               s.Enable as sensorEnable,
               s.ExValues,
               c.CaptureInterval,
               c.ImageCapture
        from tb_video_device_source tvds
                 left join tb_video_capture c on tvds.ID = c.VideoDeviceSourceID
                 left join tb_sensor s on tvds.ID = s.VideoDeviceSourceID
        where tvds.DeviceSerial in
        <foreach collection="deviceSerialList" item="deviceSerial" separator="," open="(" close=")">
            #{deviceSerial}
        </foreach>
    </select>


    <select id="selectListByDeviceSerialList"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.param.video.VideoDeviceInfoV6">
        select s.projectID, s.monitorPointID, s.videoDeviceSourceID, c.deviceSerial
        from tb_sensor s
                 left join tb_video_device_source c on s.videoDeviceSourceID = c.ID
        where s.videoDeviceSourceID in
        (select ID
         from tb_video_device_source where deviceSerial in
        <foreach collection="deviceSerialList" item="deviceSerial" separator="," open="(" close=")">
            #{deviceSerial}
        </foreach>
        )
    </select>
    <select id="selectManualSensorIDWithFormulaBaseInfoBySensorIDList" resultMap="sensorIDWithFormulaBaseMap"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.SensorIDWithFormulaBaseInfo">
        SELECT
            ts.`ID` sensorID,
            ts.`MonitorType` monitorType,
            ts.`TemplateID` templateID,
            tmtt.`CalType` calType,
            t.`Formula` formula,
            t.`FieldCalOrder` fieldCalOrder,
            t.`FieldToken` fieldToken,
            tp_s.`ID` sParamID,
            tp_s.`SubjectID` sParamSubjectID,
            tp_s.`SubjectType` sParamSubjectType,
            tp_s.`PaUnitID` sParamPaUnitID,
            tp_s.`DataType` sParamDataType,
            tp_s.`Token` sParamToken,
            tp_s.`Name` sParamName,
            tp_s.`PaValue` sParamPaValue,
            tp_s.`PaDesc` sParamPaDesc,
            tp_t.`ID` tParamID,
            tp_t.`SubjectID` tParamSubjectID,
            tp_t.`SubjectType` tParamSubjectType,
            tp_t.`PaUnitID` tParamPaUnitID,
            tp_t.`DataType` tParamDataType,
            tp_t.`Token` tParamToken,
            tp_t.`Name` tParamName,
            tp_t.`PaValue` tParamPaValue,
            tp_t.`PaDesc` tParamPaDesc
        FROM
            tb_sensor ts
            LEFT JOIN `tb_sensor_data_source` tsds ON tsds.`DataSourceID` = ts.`DataSourceID`
            LEFT JOIN `tb_parameter` tp_s ON tp_s.`SubjectID` = ts.`ID` AND tp_s.`SubjectType` = 3
            LEFT JOIN `tb_parameter` tp_t ON tp_t.`SubjectID` = ts.`TemplateID` AND tp_t.`SubjectType` = 4
            LEFT JOIN `tb_monitor_type_template` tmtt ON tmtt.`ID` = ts.`TemplateID`
            LEFT JOIN (
                SELECT ttf.`TemplateID`,ttf.`Formula`,ttf.`FieldCalOrder`,tmtf.`FieldToken` FROM `tb_template_formula` ttf
                    LEFT JOIN `tb_monitor_type_field` tmtf ON tmtf.`ID` = ttf.`FieldID` WHERE tmtf.`FieldClass` = 2
            ) t ON t.`TemplateID` = tmtt.`ID`
        WHERE ts.`Kind` = 3 AND tsds.`DataSourceComposeType` = 500 AND ts.`ID` IN
        <foreach collection="sensorIDList" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <delete id="deleteBatchByDeviceSerialList">
        delete
        from tb_sensor
        where VideoDeviceSourceID in (
        select ID
        from tb_video_device_source where deviceSerial in
        <foreach collection="deviceSerialList" item="deviceSerial" separator="," open="(" close=")">
            #{deviceSerial}
        </foreach>
        )
    </delete>

    <select id="sluicePage" resultType="java.lang.Integer">
        SELECT ts.ProjectID
        FROM `tb_sensor` ts
        <where>
            <trim suffixOverrides="AND">
                <choose>
                    <when test="projectIDList != null and projectIDList.size() != 0">
                        <foreach collection="projectIDList" item="item" open="ProjectID IN (" close=") AND" separator=",">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        FALSE AND
                    </otherwise>
                </choose>
                ts.MonitorType = 61 AND
            </trim>
        </where>
        GROUP BY
            ts.ProjectID
        ORDER BY
            ts.ProjectID
    </select>

    <resultMap id="sluiceMap" type="cn.shmedo.monitor.monibotbaseapi.model.response.sluice.Sluice">
        <id column="ProjectID" jdbcType="INTEGER" property="projectID"/>
        <result column="ProjectName" jdbcType="VARCHAR" property="projectName"/>
        <collection property="gates" ofType="cn.shmedo.monitor.monibotbaseapi.model.response.sluice.Gate">
            <id column="ID" jdbcType="INTEGER" property="id"/>
            <result column="Alias" jdbcType="VARCHAR" property="alias"/>
            <result column="MonitorPointID" jdbcType="INTEGER" property="monitorPointID"/>
            <result column="MonitorType" jdbcType="VARCHAR" property="monitorType"/>
        </collection>
    </resultMap>

    <select id="sluicePageInfo" resultMap="sluiceMap">
        SELECT ts.ID, ts.Alias, ts.MonitorPointID, ts.ProjectID, ts.MonitorType, tpi.ProjectName
        FROM tb_sensor ts
                 LEFT JOIN tb_project_info tpi ON ts.ProjectID = tpi.ID
        <where>
            <choose>
                <when test="projectIDList != null and projectIDList.size() != 0">
                    <foreach collection="projectIDList" open="ts.ProjectID IN  (" close=")" separator="," item="item">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    FALSE
                </otherwise>
            </choose>
                AND ts.MonitorType IN (60, 61)
        </where>
    </select>

    <select id="queryGateIotToken" resultType="reactor.util.function.Tuple3">
        SELECT ts.ID                                          AS t1,
               SUBSTRING_INDEX(tsds.DataSourceToken, '@', 1)  AS t3,
               SUBSTRING_INDEX(tsds.DataSourceToken, '_', -1) AS t2
        FROM `tb_sensor` ts
                 LEFT JOIN tb_sensor_data_source tsds ON ts.DataSourceID = tsds.DataSourceID
        WHERE ts.`DataSourceComposeType` = 1
          AND ts.MonitorType = 61
        <if test="projectID != null and projectID > 0">
            AND ts.ProjectID = #{projectID}
        </if>
        <if test="sensorID != null and sensorID > 0">
            AND ts.ID = #{sensorID}
        </if>
    </select>


    <select id="selectListByGqQueryCondition"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.sensor.SensorBaseInfoV3">
        select pi.companyID,
               mp.ID          as monitorPointID,
               mp.Name        as monitorPointName,
               mt.monitorType,
               mt.TypeName    as monitorTypeName,
               mt.TypeAlias   as monitorTypeAlias,
               s.ID           as sensorID,
               s.Name         as sensorName,
               s.Alias        as sensorAlias,
               s.kind,
               mp.projectID,
               pi.projectType as projectTypeID,
               pi.projectName,
               pt.TypeName    as projectTypeName,
               mp.exValues
        from tb_sensor s
                 left join tb_monitor_point mp on s.monitorPointID = mp.ID
                 left join tb_monitor_type mt on s.monitorType = mt.monitorType
                 left join tb_project_info pi on mp.projectID = pi.ID
                 left join tb_project_type pt on pt.ID = pi.projectType
        where pi.companyID = #{companyID}
          and pi.projectType = #{projectTypeID}
          and s.monitorType = #{monitorType}
        <if test="kind != null">
            and s.kind = #{kind}
        </if>
        <if test="tokenStr != null and tokenStr != ''">
          and mp.exValues like concat('%', #{tokenStr}, '%')
        </if>
        <if test="monitorPointName != null and monitorPointName != ''">
            and mp.Name like concat('%', #{monitorPointName}, '%')
        </if>
    </select>

    <select id="measurePointPage"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.dto.watermeasure.WaterMeasurePointSimple">
        SELECT ts.ID             sensorID,
               ts.Kind           sensorKind,
               ts.ProjectID      projectID,
               ts.MonitorPointID monitorPointID,
               tpi.CompanyID     companyID,
               tpi.ProjectName   projectName,
               tpi.ProjectType   projectType,
               tmp.`Name`        monitorPointName,
               tmp.ExValues      exValues
        FROM `tb_sensor` ts
                 INNER JOIN tb_project_info tpi ON ts.ProjectID = tpi.ID
                 INNER JOIN tb_monitor_point tmp ON ts.MonitorPointID = tmp.ID
        <where>
            <trim suffixOverrides="AND">
                <choose>
                    <when test="param.projectIdList != null and param.projectIdList.size() != 0">
                        <foreach collection="param.projectIdList" separator="," item="item" open="ts.ProjectID IN ("
                                 close=") AND">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        FALSE AND
                    </otherwise>
                </choose>
                ts.MonitorType IN (60, 70) AND
                ts.Kind IN (1, 3) AND
                <if test="param.keyword != null and param.keyword != ''">
                    tmp.`Name` LIKE CONCAT('%', #{param.keyword}, '%') AND
                </if>
                <if test="param.companyID != null">
                    tpi.CompanyID = #{param.companyID} AND
                </if>
            </trim>
        </where>
        ORDER BY CONVERT (tmp.`Name` USING gbk ) COLLATE gbk_chinese_ci ASC
    </select>

    <select id="singleMeasurePoint"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.dto.watermeasure.WaterMeasurePointInfo">
        SELECT ts.ID             sensorID,
               ts.Kind           sensorKind,
               ts.ProjectID      projectID,
               ts.MonitorPointID monitorPointID,
               ts.Alias          sensorAlias,
               ts.MonitorType    monitorType,
               tpi.CompanyID     companyID,
               tpi.ProjectName   projectName,
               tpi.ProjectType   projectType,
               tmp.`Name`        monitorPointName,
               tmp.ExValues      exValues,
               tmp.GpsLocation   gpsLocation,
               tmi.ID            monitorItemID,
               tmi.`Name`        monitorItemName
        FROM `tb_sensor` ts
                 INNER JOIN tb_project_info tpi ON ts.ProjectID = tpi.ID
                 INNER JOIN tb_monitor_point tmp ON ts.MonitorPointID = tmp.ID
                 INNER JOIN tb_monitor_item tmi ON tmp.MonitorItemID = tmi.ID
        WHERE ts.ID = #{sensorID}
          AND ts.MonitorType IN (60, 70)
          AND tpi.CompanyID = #{companyID}
    </select>

    <update id="updatePointBySensorID">
        update tb_sensor
        set MonitorPointID = #{pointID},
            UpdateUserID   = #{userID}
        where ID = #{sensorID}
    </update>

    <select id="listWaterMeasureSensor" resultType="reactor.util.function.Tuple2">
        SELECT ts.ID    t1,
               ts.alias t2
        FROM tb_sensor ts
                 INNER JOIN tb_project_info tpi ON ts.ProjectID = tpi.ID
        WHERE
        <trim suffixOverrides="AND">
            ts.monitorPointID IS NULL AND
            ts.kind = 3 AND
            ts.Enable = TRUE AND
            <if test="param.companyID != null">
                tpi.CompanyID = #{param.companyID} AND
            </if>
            <if test="param.projectID != null">
                ts.ProjectID = #{param.projectID} AND
            </if>
            <if test="param.monitorType != null">
                ts.MonitorType = #{param.monitorType} AND
            </if>
        </trim>
        ORDER BY ts.ID DESC;
    </select>

    <update id="batchUpdateBySensorKind">
        update tb_sensor
        set kind = #{kind}
        where ID in
        <foreach collection="sensorIDList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>