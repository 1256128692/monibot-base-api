<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shmedo.monitor.monibotbaseapi.dal.mapper.TbMonitorPointMapper">
    <resultMap id="BaseResultMap" type="cn.shmedo.monitor.monibotbaseapi.model.db.TbMonitorPoint">
        <!--@mbg.generated-->
        <!--@Table tb_monitor_point-->
        <id column="ID" jdbcType="INTEGER" property="ID"/>
        <result column="ProjectID" jdbcType="INTEGER" property="projectID"/>
        <result column="MonitorType" jdbcType="INTEGER" property="monitorType"/>
        <result column="MonitorItemID" jdbcType="INTEGER" property="monitorItemID"/>
        <result column="Name" jdbcType="VARCHAR" property="name"/>
        <result column="InstallLocation" jdbcType="VARCHAR" property="installLocation"/>
        <result column="GpsLocation" jdbcType="VARCHAR" property="gpsLocation"/>
        <result column="ImageLocation" jdbcType="VARCHAR" property="imageLocation"/>
        <result column="OverallViewLocation" jdbcType="VARCHAR" property="overallViewLocation"/>
        <result column="SpatialLocation" jdbcType="VARCHAR" property="spatialLocation"/>
        <result column="Enable" jdbcType="BIT" property="enable"/>
        <result column="ExValues" jdbcType="VARCHAR" property="exValues"/>
        <result column="DisplayOrder" jdbcType="INTEGER" property="displayOrder"/>
        <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="CreateUserID" jdbcType="INTEGER" property="createUserID"/>
        <result column="UpdateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="UpdateUserID" jdbcType="INTEGER" property="updateUserID"/>
    </resultMap>
    <resultMap id="ThematicGroupPointMap" type="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicGroupPointListInfo">
        <id column="monitorGroupID" jdbcType="INTEGER" property="monitorGroupID"/>
        <result column="monitorGroupName" jdbcType="VARCHAR" property="monitorGroupName"/>
        <result column="monitorGroupEnable" jdbcType="BIT" property="monitorGroupEnable"/>
        <collection property="monitorPointDataList" ofType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicPointListInfo">
            <id column="monitorPointID" jdbcType="INTEGER" property="monitorPointID"/>
            <result column="monitorPointName" jdbcType="VARCHAR" property="monitorPointName"/>
            <result column="monitorPointEnable" jdbcType="BIT" property="monitorPointEnable"/>
            <result column="monitorType" jdbcType="INTEGER" property="monitorType"/>
            <result column="monitorItemID" jdbcType="INTEGER" property="monitorItemID"/>
            <result column="sensorID" jdbcType="INTEGER" property="sensorID"/>
        </collection>
    </resultMap>
    <resultMap id="ThematicWetLineConfigMap" type="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.WetLineConfigInfo">
        <id column="monitorGroupID" jdbcType="INTEGER" property="monitorGroupID"/>
        <result column="monitorGroupName" jdbcType="VARCHAR" property="monitorGroupName"/>
        <result column="monitorGroupEnable" jdbcType="BIT" property="monitorGroupEnable"/>
        <result column="monitorGroupImagePath" jdbcType="VARCHAR" property="monitorGroupImagePath"/>
        <collection property="monitorGroupConfigList" ofType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicProjectConfigInfo">
            <id column="gConfigID" jdbcType="INTEGER" property="configID"/>
            <result column="gProjectID" jdbcType="INTEGER" property="projectID"/>
            <result column="gGroup" jdbcType="VARCHAR" property="group"/>
            <result column="gKey" jdbcType="VARCHAR" property="key"/>
            <result column="gValue" jdbcType="VARCHAR" property="value"/>
        </collection>
        <collection property="monitorPointList" ofType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicPointListInfoV2">
            <id column="monitorPointID" jdbcType="INTEGER" property="monitorPointID"/>
            <result column="monitorPointName" jdbcType="VARCHAR" property="monitorPointName"/>
            <result column="monitorPointEnable" jdbcType="BIT" property="monitorPointEnable"/>
            <result column="monitorType" jdbcType="INTEGER" property="monitorType"/>
            <result column="monitorItemID" jdbcType="INTEGER" property="monitorItemID"/>
            <result column="sensorID" jdbcType="INTEGER" property="sensorID"/>
            <result column="sensorExValues" jdbcType="VARCHAR" property="sensorExValues"/>
            <collection property="monitorPointConfigList" ofType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicProjectConfigInfo">
                <id column="pConfigID" jdbcType="INTEGER" property="configID"/>
                <result column="pProjectID" jdbcType="INTEGER" property="projectID"/>
                <result column="pGroup" jdbcType="VARCHAR" property="group"/>
                <result column="pKey" jdbcType="VARCHAR" property="key"/>
                <result column="pValue" jdbcType="VARCHAR" property="value"/>
            </collection>
            <collection property="eigenValueList" ofType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicEigenValueData">
                <id column="eigenValueID" jdbcType="INTEGER" property="eigenValueID"/>
                <id column="eigenValueName" jdbcType="VARCHAR" property="eigenValueName"/>
                <id column="eigenValue" jdbcType="DOUBLE" property="eigenValue"/>
                <id column="chnUnit" jdbcType="VARCHAR" property="chnUnit"/>
                <id column="engUnit" jdbcType="VARCHAR" property="engUnit"/>
            </collection>
            <collection property="paramFieldList" ofType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicSensorParamField">
                <id column="paramFieldID" jdbcType="INTEGER" property="id"/>
                <result column="paramFieldSubjectID" jdbcType="INTEGER" property="subjectID"/>
                <result column="paramFieldSubjectType" jdbcType="INTEGER" property="subjectType"/>
                <result column="paramFieldDataType" jdbcType="VARCHAR" property="dataType"/>
                <result column="paramFieldToken" jdbcType="VARCHAR" property="token"/>
                <result column="paramFieldName" jdbcType="VARCHAR" property="name"/>
                <result column="paramFieldPaValue" jdbcType="VARCHAR" property="paValue"/>
                <result column="paramFieldPaDesc" jdbcType="VARCHAR" property="paDesc"/>
                <result column="paramFieldChnUnit" jdbcType="VARCHAR" property="chnUnit"/>
                <result column="paramFieldEngUnit" jdbcType="VARCHAR" property="engUnit"/>
            </collection>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        ID,
        ProjectID,
        MonitorType,
        MonitorItemID,
        `Name`,
        InstallLocation,
        GpsLocation,
        ImageLocation,
        OverallViewLocation,
        SpatialLocation,
        `Enable`,
        ExValues,
        DisplayOrder,
        CreateTime,
        CreateUserID,
        UpdateTime,
        UpdateUserID
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from tb_monitor_point
        where ID = #{ID,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from tb_monitor_point
        where ID = #{ID,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="ID" keyProperty="ID"
            parameterType="cn.shmedo.monitor.monibotbaseapi.model.db.TbMonitorPoint" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into tb_monitor_point (ProjectID, MonitorType, MonitorItemID,
                                      `Name`, InstallLocation, GpsLocation,
                                      ImageLocation, OverallViewLocation, SpatialLocation,
                                      `Enable`, ExValues, DisplayOrder,
                                      CreateTime, CreateUserID, UpdateTime,
                                      UpdateUserID)
        values (#{projectID,jdbcType=INTEGER}, #{monitorType,jdbcType=INTEGER}, #{monitorItemID,jdbcType=INTEGER},
                #{name,jdbcType=VARCHAR}, #{installLocation,jdbcType=VARCHAR}, #{gpsLocation,jdbcType=VARCHAR},
                #{imageLocation,jdbcType=VARCHAR}, #{overallViewLocation,jdbcType=VARCHAR},
                #{spatialLocation,jdbcType=VARCHAR},
                #{enable,jdbcType=BIT}, #{exValues,jdbcType=VARCHAR}, #{displayOrder,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP}, #{createUserID,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP},
                #{updateUserID,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="ID" keyProperty="ID"
            parameterType="cn.shmedo.monitor.monibotbaseapi.model.db.TbMonitorPoint" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into tb_monitor_point
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectID != null">
                ProjectID,
            </if>
            <if test="monitorType != null">
                MonitorType,
            </if>
            <if test="monitorItemID != null">
                MonitorItemID,
            </if>
            <if test="name != null">
                `Name`,
            </if>
            <if test="installLocation != null">
                InstallLocation,
            </if>
            <if test="gpsLocation != null">
                GpsLocation,
            </if>
            <if test="imageLocation != null">
                ImageLocation,
            </if>
            <if test="overallViewLocation != null">
                OverallViewLocation,
            </if>
            <if test="spatialLocation != null">
                SpatialLocation,
            </if>
            <if test="enable != null">
                `Enable`,
            </if>
            <if test="exValues != null">
                ExValues,
            </if>
            <if test="displayOrder != null">
                DisplayOrder,
            </if>
            <if test="createTime != null">
                CreateTime,
            </if>
            <if test="createUserID != null">
                CreateUserID,
            </if>
            <if test="updateTime != null">
                UpdateTime,
            </if>
            <if test="updateUserID != null">
                UpdateUserID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectID != null">
                #{projectID,jdbcType=INTEGER},
            </if>
            <if test="monitorType != null">
                #{monitorType,jdbcType=INTEGER},
            </if>
            <if test="monitorItemID != null">
                #{monitorItemID,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="installLocation != null">
                #{installLocation,jdbcType=VARCHAR},
            </if>
            <if test="gpsLocation != null">
                #{gpsLocation,jdbcType=VARCHAR},
            </if>
            <if test="imageLocation != null">
                #{imageLocation,jdbcType=VARCHAR},
            </if>
            <if test="overallViewLocation != null">
                #{overallViewLocation,jdbcType=VARCHAR},
            </if>
            <if test="spatialLocation != null">
                #{spatialLocation,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                #{enable,jdbcType=BIT},
            </if>
            <if test="exValues != null">
                #{exValues,jdbcType=VARCHAR},
            </if>
            <if test="displayOrder != null">
                #{displayOrder,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserID != null">
                #{createUserID,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserID != null">
                #{updateUserID,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.shmedo.monitor.monibotbaseapi.model.db.TbMonitorPoint">
        <!--@mbg.generated-->
        update tb_monitor_point
        <set>
            <if test="projectID != null">
                ProjectID = #{projectID,jdbcType=INTEGER},
            </if>
            <if test="monitorType != null">
                MonitorType = #{monitorType,jdbcType=INTEGER},
            </if>
            <if test="monitorItemID != null">
                MonitorItemID = #{monitorItemID,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                `Name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="installLocation != null">
                InstallLocation = #{installLocation,jdbcType=VARCHAR},
            </if>
            <if test="gpsLocation != null">
                GpsLocation = #{gpsLocation,jdbcType=VARCHAR},
            </if>
            <if test="imageLocation != null">
                ImageLocation = #{imageLocation,jdbcType=VARCHAR},
            </if>
            <if test="overallViewLocation != null">
                OverallViewLocation = #{overallViewLocation,jdbcType=VARCHAR},
            </if>
            <if test="spatialLocation != null">
                SpatialLocation = #{spatialLocation,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                `Enable` = #{enable,jdbcType=BIT},
            </if>
            <if test="exValues != null">
                ExValues = #{exValues,jdbcType=VARCHAR},
            </if>
            <if test="displayOrder != null">
                DisplayOrder = #{displayOrder,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                CreateTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserID != null">
                CreateUserID = #{createUserID,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserID != null">
                UpdateUserID = #{updateUserID,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{ID,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.shmedo.monitor.monibotbaseapi.model.db.TbMonitorPoint">
        <!--@mbg.generated-->
        update tb_monitor_point
        set ProjectID           = #{projectID,jdbcType=INTEGER},
            MonitorType         = #{monitorType,jdbcType=INTEGER},
            MonitorItemID       = #{monitorItemID,jdbcType=INTEGER},
            `Name`              = #{name,jdbcType=VARCHAR},
            InstallLocation     = #{installLocation,jdbcType=VARCHAR},
            GpsLocation         = #{gpsLocation,jdbcType=VARCHAR},
            ImageLocation       = #{imageLocation,jdbcType=VARCHAR},
            OverallViewLocation = #{overallViewLocation,jdbcType=VARCHAR},
            SpatialLocation     = #{spatialLocation,jdbcType=VARCHAR},
            `Enable`            = #{enable,jdbcType=BIT},
            ExValues            = #{exValues,jdbcType=VARCHAR},
            DisplayOrder        = #{displayOrder,jdbcType=INTEGER},
            CreateTime          = #{createTime,jdbcType=TIMESTAMP},
            CreateUserID        = #{createUserID,jdbcType=INTEGER},
            UpdateTime          = #{updateTime,jdbcType=TIMESTAMP},
            UpdateUserID        = #{updateUserID,jdbcType=INTEGER}
        where ID = #{ID,jdbcType=INTEGER}
    </update>


    <select id="selectMonitorTypeAndProIDByProIDList" resultMap="BaseResultMap">
        select ProjectID,
               MonitorType,
               MonitorItemID
        from tb_monitor_point
        where ProjectID in
        <foreach close=")" collection="proIDList" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </select>


    <select id="selectMonitorTypeCount">
        select count(distinct MonitorType)
        from tb_monitor_point
        where ID in
        <foreach close=")" collection="monitorPointIDs" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </select>


    <select id="selectListByCondition"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.MonitorPointAndItemInfo">
        select tmp.ID,
               tmp.ProjectID,
               tmp.MonitorType,
               tmp.MonitorItemID,
               tmp.`Name`,
               tmp.InstallLocation,
               tmp.GpsLocation,
               tmp.ImageLocation,
               tmp.OverallViewLocation,
               tmp.SpatialLocation,
               tmp.ExValues,
               tmp.DisplayOrder,
               tmp.CreateTime,
               tmp.CreateUserID,
               tmp.UpdateTime,
               tmp.UpdateUserID,
               tmi.Name  as monitorItemName,
               tmi.Alias as monitorItemAlias,
               tpmc.Density
        from tb_monitor_point tmp
                 LEFT JOIN tb_monitor_item tmi ON tmi.ID = tmp.MonitorItemID
                 LEFT JOIN tb_project_monitor_class tpmc ON tmi.MonitorClass = tpmc.MonitorClass
        where tmp.ProjectID in
        <foreach close=")" collection="projectIDList" item="projectID" open="(" separator=",">
            #{projectID}
        </foreach>
        <if test="monitorType != null">
            and tmp.MonitorType = #{monitorType}
        </if>
        <if test="monitorItemID != null">
            and tmp.MonitorItemID = #{monitorItemID}
        </if>
        <if test="monitorItemName != null and monitorItemName != ''">
            and tmi.Name = #{monitorItemName}
        </if>
        <if test="monitorClassType != null">
            and tmi.monitorClass = #{monitorClassType}
        </if>
        group by tmp.ID, tpmc.Density, tmi.Name;
    </select>
    <select id="queryPage" resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorpoint.MonitorPoint4Web">
        select p.*,
               t.ID          as monitorTypeID,
               t.TypeName    as monitorTypeName,
               t.TypeAlias   as monitorTypeAlias,
               t.MultiSensor as monitorTypeMultiSensor,
               it.Name       as monitorItemName,
               it.Alias      as monitorItemAlias
        from tb_monitor_point as p
                 left join tb_monitor_type as t on t.MonitorType = p.MonitorType
                 left join tb_monitor_item as it on it.id = p.MonitorItemID
        where p.ProjectID = #{projectID}
        <if test="monitorType != null">
            and p.MonitorType = #{monitorType}
        </if>
        <if test="monitorItemID != null">
            and p.MonitorItemID = #{monitorItemID}
        </if>
        <if test="queryCode != null and queryCode != ''">
            and (
                        p.Name like concat('%', #{queryCode}, '%')
                    or p.id in (select distinct MonitorPointID
                                from tb_sensor
                                where Name like concat('%', #{queryCode}, '%')
                                   or Alias like concat('%', #{queryCode}, '%'))
                )
        </if>
        order by p.ID desc
    </select>
    <select id="querySimpleBy" resultType="cn.shmedo.monitor.monibotbaseapi.model.response.IDNameAlias">
        select id, Name
        from tb_monitor_point
        where ProjectID = #{projectID}
        <if test="monitorItemIDList != null and monitorItemIDList.size > 0">
            and MonitorItemID in
            <foreach collection="monitorItemIDList" item="iid" separator="," open="(" close=")">
                #{iid}
            </foreach>
        </if>
        <if test="groupID != null">
            and id in (select MonitorPointID from tb_monitor_group_point where MonitorGroupID = #{groupID})
        </if>
        order by id desc
    </select>

    <insert id="insertBatch">
        insert into tb_monitor_point
        (ProjectID, MonitorType, MonitorItemID, `Name`, InstallLocation, GpsLocation, ImageLocation,
         OverallViewLocation,
         SpatialLocation, `Enable`, ExValues, DisplayOrder, CreateTime, CreateUserID, UpdateTime, UpdateUserID)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.projectID}, #{item.monitorType}, #{item.monitorItemID}, #{item.name}, #{item.installLocation},
             #{item.gpsLocation}, #{item.imageLocation}, #{item.overallViewLocation}, #{item.spatialLocation},
             #{item.enable}, #{item.exValues}, #{item.displayOrder}, #{item.createTime}, #{item.createUserID},
             #{item.updateTime}, #{item.updateUserID})
        </foreach>
    </insert>

    <update id="updateBatch">
        update tb_monitor_point
        set
        <trim prefix="Name = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then #{item.name}
            </foreach>
        </trim>
        <trim prefix="enable = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then #{item.enable}
            </foreach>
        </trim>
        <trim prefix="gpsLocation = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then

                <choose>
                    <when test="selectUpdate != null and selectUpdate">
                        <choose>
                            <when test="item.gpsLocation == null">
                                gpsLocation
                            </when>
                            <otherwise>
                                #{item.gpsLocation}
                            </otherwise>
                        </choose>
                    </when>
                    <otherwise>
                        #{item.gpsLocation}
                    </otherwise>
                </choose>
            </foreach>
        </trim>
        <trim prefix="imageLocation = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then
                <choose>
                    <when test="selectUpdate != null and selectUpdate">
                        <choose>
                            <when test="item.imageLocation == null">
                                imageLocation
                            </when>
                            <otherwise>
                                #{item.imageLocation}
                            </otherwise>
                        </choose>
                    </when>
                    <otherwise>
                        #{item.imageLocation}
                    </otherwise>
                </choose>
            </foreach>
        </trim>

        <trim prefix="overallViewLocation = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then
                <choose>
                    <when test="selectUpdate != null and selectUpdate">
                        <choose>
                            <when test="item.overallViewLocation == null">
                                overallViewLocation
                            </when>
                            <otherwise>
                                #{item.overallViewLocation}
                            </otherwise>
                        </choose>
                    </when>
                    <otherwise>
                        #{item.overallViewLocation}
                    </otherwise>
                </choose>
            </foreach>
        </trim>
        <trim prefix="spatialLocation = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then
                <choose>
                    <when test="selectUpdate != null and selectUpdate">
                        <choose>
                            <when test="item.spatialLocation == null">
                                spatialLocation
                            </when>
                            <otherwise>
                                #{item.spatialLocation}
                            </otherwise>
                        </choose>
                    </when>
                    <otherwise>
                        #{item.spatialLocation}
                    </otherwise>
                </choose>
            </foreach>
        </trim>
        <trim prefix="exValues = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then
                <choose>
                    <when test="selectUpdate != null and selectUpdate">
                        <choose>
                            <when test="item.exValues == null">
                                exValues
                            </when>
                            <otherwise>
                                #{item.exValues}
                            </otherwise>
                        </choose>
                    </when>
                    <otherwise>
                        #{item.exValues}
                    </otherwise>
                </choose>
            </foreach>
        </trim>
        <trim prefix="displayOrder = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then
                <choose>
                    <when test="selectUpdate != null and selectUpdate">
                        <choose>
                            <when test="item.displayOrder == null">
                                displayOrder
                            </when>
                            <otherwise>
                                #{item.displayOrder}
                            </otherwise>
                        </choose>
                    </when>
                    <otherwise>
                        #{item.displayOrder}
                    </otherwise>
                </choose>
            </foreach>
        </trim>
        <trim prefix="updateUserID = case" suffix="end,">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then #{item.updateUserID}
            </foreach>
        </trim>
        <trim prefix="updateTime = case" suffix="end">
            <foreach collection="list" index="index" item="item">
                when ID = #{item.ID} then #{item.updateTime}
            </foreach>
        </trim>
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.ID}
        </foreach>
    </update>

    <select id="queryGroupPointByGroupIDs"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorgroup.GroupPoint">
        select gp.ImageLocation
             , gp.MonitorPointID
             , p.Name            as monitorPointName
             , p.MonitorType
             , p.MonitorItemID
             , gp.MonitorGroupID as groupID
        from tb_monitor_point as p
                 right join tb_monitor_group_point as gp on p.ID = gp.MonitorPointID
        where gp.MonitorGroupID in
        <foreach collection="list" item="groupID" separator="," open="(" close=")">
            #{groupID}
        </foreach>
    </select>


    <select id="selectListByIDList"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.video.VideoMonitorPointLiveInfo">
        select p.ID     as monitorPointID
             , p.`Name` as monitorPointName
             , p.MonitorItemID
             , p.MonitorType
             , i.`Name` as monitorItemName
             , i.Alias  as monitorItemAlias
             , s.ID     as sensorID
             , s.`Name` as sensorName
             , s.configFieldValue
             , s.exValues
             , pi.CompanyID
        from tb_monitor_point as p
                 left join tb_monitor_item as i on i.ID = p.MonitorItemID
                 left join tb_sensor as s on s.MonitorPointID = p.ID
                 left join tb_project_info pi on p.ProjectID = pi.ID
        where p.ID in
        <foreach collection="monitorPointIDList" item="pointID" separator="," open="(" close=")">
            #{pointID}
        </foreach>
    </select>


    <select id="selectVideoPointListByCondition"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.wtdevice.WtVideoPageInfo">
        select p.ID            as monitorPointID
             , p.`Name`        as monitorPointName
             , p.GpsLocation   as pointGpsLocation
             , p.ImageLocation as pointImageLocation
             , p.MonitorItemID
             , p.MonitorType
             , i.`Name`        as monitorItemName
             , i.Alias         as monitorItemAlias
             , s.ID            as sensorID
             , s.`Name`        as sensorName
             , s.exValues
             , s.Status
             , pi.ID           as projectID
             , pi.ProjectName  as projectName
             , pi.ShortName    as projectShortName
             , pi.Location
             , pi.ProjectAddress
        from tb_monitor_point as p
                 left join tb_project_info as pi on pi.ID = p.ProjectID
                 left join tb_monitor_item as i on i.ID = p.MonitorItemID
                 left join tb_sensor as s on s.MonitorPointID = p.ID
        where p.ProjectID in
        <foreach collection="projectIDList" item="projectID" separator="," open="(" close=")">
            #{projectID}
        </foreach>
        <if test="onlineInt != null">
            and s.Status = #{onlineInt}
        </if>
        <if test="status != null">
            and s.Status = #{status}
        </if>
        <if test="areaCode != null">
            and pi.Location LIKE CONCAT('%', #{areaCode}, '%')
        </if>
        <if test="videoType != null">
            and s.ExValues LIKE CONCAT('%', #{videoType}, '%')
        </if>
        <if test="monitorItemID != null">
            and p.monitorItemID = #{monitorItemID}
        </if>
        <if test="monitorPointID != null">
            and p.`ID` = #{monitorPointID}
        </if>
        <if test="monitorItemName != null and monitorItemName != ''">
            and (
                        i.Name LIKE CONCAT('%', #{monitorItemName}, '%') or
                        i.Alias LIKE CONCAT('%', #{monitorItemName}, '%')
                )
        </if>
        and i.MonitorType = #{monitorType}
    </select>


    <select id="selectListByProjectIDsAndMonitorItemName"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorpoint.MonitorPointWithSensor">
        select p.ID     as monitorPointID
             , p.`Name` as monitorPointName
             , p.MonitorItemID
             , i.`Name` as monitorItemName
             , i.Alias  as monitorItemAlias
             , p.ProjectID
        from tb_monitor_point as p
                 left join tb_monitor_item as i on i.ID = p.MonitorItemID
        where p.ProjectID in
        <foreach collection="projectIDList" item="projectID" separator="," open="(" close=")">
            #{projectID}
        </foreach>
        and i.Alias = #{monitorItemName}
    </select>


    <select id="selectPointWithItemBaseInfo"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorpoint.MonitorPointWithItemBaseInfo">
        SELECT tmp.`ID`          ID,
               tmp.`ProjectID`   projectID,
               tmp.`MonitorType` monitorType,
               tmp.`Name`        name,
               tmi.ID            monitorItemID,
               tmi.`Name`        monitorItemName,
               tmi.Alias         monitorItemAlias
        FROM tb_monitor_point tmp
                 LEFT JOIN tb_monitor_item tmi ON tmi.ID = tmp.MonitorItemID
        WHERE tmi.ID IS NOT NULL
          AND tmp.ProjectID IN
        <foreach collection="projectIDList" item="item" separator="," index="index" open="(" close=")">
            #{item}
        </foreach>
        AND tmp.MonitorType IN
        <foreach collection="monitorTypeList" item="item" separator="," index="index" open="(" close=")">
            #{item}
        </foreach>
    </select>


    <select id="selectListByProjectIDAndMonitorClass"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.db.TbMonitorPoint">
        SELECT *
        FROM tb_monitor_point tmp
                 LEFT JOIN tb_monitor_item tmi ON tmi.ID = tmp.MonitorItemID
        WHERE 1 = 1
          AND tmi.ProjectID = #{projectID}
          AND tmi.MonitorClass = #{monitorClass}
    </select>

    <select id="selectPointListByMonitorItemIDList"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.MonitorPointBaseInfoV1">
        select tmp.ID as monitorPointID, tmp.monitorItemID, tmp.name, tmp.enable, mgp.MonitorGroupID as groupID
        FROM tb_monitor_point tmp
                 LEFT JOIN tb_monitor_group_point mgp ON tmp.ID = mgp.MonitorPointID
        where tmp.monitorItemID in
        <foreach collection="monitorItemIDList" item="item" separator="," index="index" open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectPointListByIDList" resultMap="BaseResultMap">
        select *
        from tb_monitor_point where
            ID in
        <foreach collection="monitorPointIDList" item="item" separator="," index="index" open="(" close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectThematicGroupPointList" resultMap="ThematicGroupPointMap"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.ThematicGroupPointListInfo">
        SELECT
            tmg.`ID` monitorGroupID,
            tmg.`Name` monitorGroupName,
            tmg.`Enable` monitorGroupEnable,
            tmp.`ID` monitorPointID,
            tmp.`Name` monitorPointName,
            tmp.`Enable` monitorPointEnable,
            tmp.`MonitorType` monitorType,
            tmp.`MonitorItemID` monitorItemID,
            ts.`ID` sensorID
        FROM
            tb_monitor_group tmg
            LEFT JOIN tb_monitor_group_point tmgp ON tmgp.`MonitorGroupID` = tmg.`ID`
            LEFT JOIN tb_monitor_point tmp ON tmp.`ID` = tmgp.`MonitorPointID`
            LEFT JOIN tb_monitor_item tmi ON tmi.`ID` = tmp.`MonitorItemID`
            LEFT JOIN tb_sensor ts ON ts.`MonitorPointID` = tmp.`ID`
        WHERE tmg.`ProjectID` =#{param.projectID}
        <if test="param.monitorType != null">
            AND tmi.`MonitorType` =#{param.monitorType}
        </if>
        <if test="param.monitorGroupIDList != null and param.monitorGroupIDList.size != 0">
            AND tmg.`ID` IN
            <foreach collection="param.monitorGroupIDList" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="selectItemIDsByIDs" resultType="java.lang.Integer">
        select distinct MonitorItemID
        from tb_monitor_point where ID in
        <foreach collection="monitorPointIDList" item="item" separator="," index="index" open="(" close=")">
            #{item}
        </foreach>
    </select>


    <select id="selectMonitorPointDataInfoListByIDList"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorpointdata.MonitorPointDataInfo">
        select mp.ID        as monitorPointID,
               mp.Name      as monitorPointName,
               mp.monitorType,
               mt.TypeAlias as monitorTypeAlias,
               mt.TypeName  as monitorTypeName,
               mt.multiSensor
        from tb_monitor_point mp
                 left join tb_monitor_type mt on mp.monitorType = mt.monitorType
        where mp.ID in
        <foreach collection="monitorPointIDList" item="item" separator="," index="index" open="(" close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectMonitorTypeExValuesByPointIDList" resultType="java.util.Map">
        SELECT tmp.ID monitorPointID,tmp.MonitorType monitorType,tmt.ExValues exValues FROM tb_monitor_point tmp LEFT JOIN tb_monitor_type tmt ON tmp.MonitorType = tmt.MonitorType WHERE tmp.ID IN
        <foreach collection="monitorPointIDList" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="selectWetLineConfig" resultMap="ThematicWetLineConfigMap"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.thematicDataAnalysis.WetLineConfigInfo">
        SELECT
            tmg.`ID` monitorGroupID,
            tmg.`Name` monitorGroupName,
            tmg.`Enable` monitorGroupEnable,
            tmg.`ImagePath` monitorGroupImagePath,
            tpc_g.`ID` gConfigID,
            tpc_g.`ProjectID` gProjectID,
            tpc_g.`Group` gGroup,
            tpc_g.`Key` gKey,
            tpc_g.`Value` gValue,
            tmp.`ID` monitorPointID,
            tmp.`Name` monitorPointName,
            tmp.`Enable` monitorPointEnable,
            tmp.`MonitorType` monitorType,
            tmp.`MonitorItemID` monitorItemID,
            ts.`ID` sensorID,
            ts.`ExValues` sensorExValues,
            tp.`ID` paramFieldID,
            tp.`SubjectID` paramFieldSubjectID,
            tp.`SubjectType` paramFieldSubjectType,
            tp.`DataType` paramFieldDataType,
            tp.`Token` paramFieldToken,
            tp.`Name` paramFieldName,
            tp.`PaValue` paramFieldPaValue,
            tp.`PaDesc` paramFieldPaDesc,
            tdu_p.`ChnUnit` paramFieldChnUnit,
            tdu_p.`EngUnit` paramFieldEngUnit,
            tpc_p.`ID` pConfigID,
            tpc_p.`ProjectID` pProjectID,
            tpc_p.`Group` pGroup,
            tpc_p.`Key` pKey,
            tpc_p.`Value` pValue,
            tev.`ID` eigenValueID,
            tev.`Name` eigenValueName,
            tev.`Value` eigenValue,
            tdu.`ChnUnit` chnUnit,
            tdu.`EngUnit` engUnit
        FROM
            tb_monitor_group tmg
            LEFT JOIN tb_project_config tpc_g ON tmg.ProjectID = tpc_g.ProjectID AND tpc_g.`Group` = 'monitorGroup' AND tpc_g.`Key` LIKE CONCAT( '%::', tmg.ID )
            LEFT JOIN tb_monitor_group_point tmgp ON tmgp.`MonitorGroupID` = tmg.`ID`
            LEFT JOIN tb_monitor_point tmp ON tmp.`ID` = tmgp.`MonitorPointID`
            LEFT JOIN tb_project_config tpc_p ON tmp.ProjectID = tpc_p.ProjectID AND tpc_p.`Group` = 'monitorPoint' AND tpc_p.`Key` LIKE CONCAT( '%::', tmp.ID )
            LEFT JOIN tb_sensor ts ON ts.MonitorPointID = tmp.ID
            LEFT JOIN tb_parameter tp ON tp.SubjectID = ts.ID
            LEFT JOIN tb_data_unit tdu_p ON tdu_p.ID = tp.PaUnitID
            LEFT JOIN tb_eigen_value_relation tevr ON tevr.`MonitorPointID` = tmp.`ID`
            LEFT JOIN tb_eigen_value tev ON tev.`ID` = tevr.`EigenValueID` AND tev.`Scope` = 0
            LEFT JOIN tb_data_unit tdu ON tdu.`ID` = tev.`UnitID`
        WHERE tmg.ID=#{param.monitorGroupID} AND tmp.MonitorType=#{param.monitorType} AND tmp.ID IN
        <foreach collection="param.monitorPointIDList" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="selectListByEigenValueIDList"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorgroup.MonitorPointBaseInfoV2">
        select mp.ID     as monitorPointID,
               mp.name   as monitorPointName,
               mp.Enable as monitorPointEnable,
               mp.monitorItemID,
               mp.monitorType,
               evr.eigenValueID
        from tb_monitor_point as mp
                 left join tb_eigen_value_relation evr on evr.monitorPointID = mp.ID
        where 1 = 1
        <if test="eigenValueIDList != null and eigenValueIDList.size != 0">
            and mp.ID in
            (select monitorPointID
             from tb_eigen_value_relation where eigenValueID in
            <foreach collection="eigenValueIDList" item="eigenValueID" index="index" open="(" close=")" separator=",">
                #{eigenValueID}
            </foreach>
            )
        </if>
    </select>

    <select id="listByProjectType"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorpoint.MonitorPointSimple">
        SELECT tmp.ID, tmp.ProjectID, tmp.MonitorType, tmp.MonitorItemID, tmp.`Name`,tpi.ProjectType
        FROM `tb_monitor_point` tmp
                 LEFT JOIN `tb_project_info` tpi ON tmp.ProjectID = tpi.ID
        <where>
            <trim suffixOverrides="AND">
                <choose>
                    <when test="projectIDList != null and projectIDList.size() != 0">
                        <foreach collection="projectIDList" open="tpi.ID IN (" close=") AND" item="item" separator=",">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>
                        FALSE AND
                    </otherwise>
                </choose>
                tmp.`Enable` = 1 AND
                <if test="monitorTypeList != null and monitorTypeList.size() != 0">
                    <foreach collection="monitorTypeList" separator="," item="item" open=" tpi.ProjectType IN (" close=") AND">
                        #{item}
                    </foreach>
                </if>
            </trim>
        </where>
    </select>

    <select id="listByProjectTypeAndMonitorType"
            resultType="cn.shmedo.monitor.monibotbaseapi.model.response.monitorpoint.MonitorPointSimple">
        SELECT tmp.ID, tmp.ProjectID, tmp.MonitorType, tmp.MonitorItemID, tmp.`Name`,tpi.ProjectType
        FROM `tb_monitor_point` tmp
        LEFT JOIN `tb_project_info` tpi ON tmp.ProjectID = tpi.ID
        right join tb_sensor ts on tmp.ID = ts.MonitorPointID
        <where>
            <trim suffixOverrides="AND">
                tmp.`Enable` = 1 and
                tpi.companyID = #{companyID}
                <if test="projectType != null ">
                    and ts.ProjectID in (select ID from `tb_project_info` where ProjectType = #{projectType})
                </if>
                <if test="monitorType != null ">
                    and tmp.MonitorType = #{monitorType}
                </if>
            </trim>
        </where>
    </select>
</mapper>